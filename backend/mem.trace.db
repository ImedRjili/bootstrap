02-28 14:06:27 jdbc[17]: exception
org.h2.jdbc.JdbcSQLException: Ambiguous column name "QUESTION_ID"; SQL statement:
SELECT qb.ID AS questionId,QUESTION_TEXT AS questionText,OPTION_ONE AS optionOne,            OPTION_TWO AS optionTwo,            OPTION_THREE AS optionThree,OPTION_FOUR AS optionFour,OPTION_FIVE AS optionFive,            qb.PHASE AS phase ,(SELECT answers  FROM answersheet_answers  WHERE answersheet = se.answersheet  AND question_id = studentexam_questions.question_id) AS studentAnswer, (SELECT MARKED_FOR_REVIEW as isReviewLaterMarked FROM answersheet_answers  WHERE answersheet = se.answersheet  AND question_id = studentexam_questions.question_id) as isReviewLaterMarked,  qa.image_id as attachmentId  FROM QUESTION_BANK qb INNER JOIN studentexam_questions ON question_id = qb.id LEFT OUTER JOIN question_attachment qa on qa.QUESTION_ID = qb.ID  INNER JOIN student_exam se ON se.ID = studentexam WHERE studentexam = ? AND se.STATUS = 'STARTED' ORDER BY qb.id [90059-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.expression.ExpressionColumn.mapColumn(ExpressionColumn.java:121)
	at org.h2.expression.ExpressionColumn.mapColumns(ExpressionColumn.java:91)
	at org.h2.expression.Comparison.mapColumns(Comparison.java:457)
	at org.h2.expression.ConditionAndOr.mapColumns(ConditionAndOr.java:250)
	at org.h2.command.dml.Select.init(Select.java:782)
	at org.h2.command.Parser.parseSelect(Parser.java:1544)
	at org.h2.command.Parser.parsePrepared(Parser.java:405)
	at org.h2.command.Parser.parse(Parser.java:279)
	at org.h2.command.Parser.parse(Parser.java:251)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:428)
	at org.h2.engine.Session.prepareCommand(Session.java:377)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1138)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:70)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(PreparedStatementCreatorFactory.java:245)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:583)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:639)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:664)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:272)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:277)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest.isSqlValid(CheckValidityOfSqlQueriesInCodebaseTest.java:124)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:180)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:170)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
02-28 16:44:58 jdbc[106]: exception
org.h2.jdbc.JdbcSQLException: Ambiguous column name "QUESTION_ID"; SQL statement:
SELECT qb.ID AS questionId,QUESTION_TEXT AS questionText,OPTION_ONE AS optionOne,            OPTION_TWO AS optionTwo,            OPTION_THREE AS optionThree,OPTION_FOUR AS optionFour,OPTION_FIVE AS optionFive,            qb.PHASE AS phase ,(SELECT answers  FROM answersheet_answers  WHERE answersheet = se.answersheet  AND question_id = studentexam_questions.question_id) AS studentAnswer, (SELECT MARKED_FOR_REVIEW as isReviewLaterMarked FROM answersheet_answers  WHERE answersheet = se.answersheet  AND question_id = studentexam_questions.question_id) as isReviewLaterMarked,  qa.image_id as attachmentId  FROM QUESTION_BANK qb INNER JOIN studentexam_questions ON question_id = qb.id LEFT OUTER JOIN question_attachment qa on qa.QUESTION_ID = qb.ID  INNER JOIN student_exam se ON se.ID = studentexam WHERE studentexam = ? AND se.STATUS = 'STARTED' ORDER BY qb.id [90059-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.expression.ExpressionColumn.mapColumn(ExpressionColumn.java:121)
	at org.h2.expression.ExpressionColumn.mapColumns(ExpressionColumn.java:91)
	at org.h2.expression.Comparison.mapColumns(Comparison.java:457)
	at org.h2.expression.ConditionAndOr.mapColumns(ConditionAndOr.java:250)
	at org.h2.command.dml.Select.init(Select.java:782)
	at org.h2.command.Parser.parseSelect(Parser.java:1544)
	at org.h2.command.Parser.parsePrepared(Parser.java:405)
	at org.h2.command.Parser.parse(Parser.java:279)
	at org.h2.command.Parser.parse(Parser.java:251)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:428)
	at org.h2.engine.Session.prepareCommand(Session.java:377)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1138)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:70)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(PreparedStatementCreatorFactory.java:245)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:583)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:639)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:664)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:272)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:277)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest.isSqlValid(CheckValidityOfSqlQueriesInCodebaseTest.java:124)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:180)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:170)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
02-28 16:47:05 jdbc[44]: exception
org.h2.jdbc.JdbcSQLException: Ambiguous column name "QUESTION_ID"; SQL statement:
SELECT qb.ID AS questionId,QUESTION_TEXT AS questionText,OPTION_ONE AS optionOne,            OPTION_TWO AS optionTwo,            OPTION_THREE AS optionThree,OPTION_FOUR AS optionFour,OPTION_FIVE AS optionFive,            qb.PHASE AS phase ,(SELECT answers  FROM answersheet_answers  WHERE answersheet = se.answersheet  AND question_id = studentexam_questions.question_id) AS studentAnswer, (SELECT MARKED_FOR_REVIEW as isReviewLaterMarked FROM answersheet_answers  WHERE answersheet = se.answersheet  AND qb.question_id = studentexam_questions.question_id) as isReviewLaterMarked,  qa.image_id as attachmentId  FROM QUESTION_BANK qb INNER JOIN studentexam_questions ON question_id = qb.id LEFT OUTER JOIN question_attachment qa on qa.QUESTION_ID = qb.ID  INNER JOIN student_exam se ON se.ID = studentexam WHERE studentexam = ? AND se.STATUS = 'STARTED' ORDER BY qb.id [90059-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.expression.ExpressionColumn.mapColumn(ExpressionColumn.java:121)
	at org.h2.expression.ExpressionColumn.mapColumns(ExpressionColumn.java:91)
	at org.h2.expression.Comparison.mapColumns(Comparison.java:457)
	at org.h2.expression.ConditionAndOr.mapColumns(ConditionAndOr.java:250)
	at org.h2.command.dml.Select.init(Select.java:782)
	at org.h2.command.Parser.parseSelect(Parser.java:1544)
	at org.h2.command.Parser.parsePrepared(Parser.java:405)
	at org.h2.command.Parser.parse(Parser.java:279)
	at org.h2.command.Parser.parse(Parser.java:251)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:428)
	at org.h2.engine.Session.prepareCommand(Session.java:377)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1138)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:70)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(PreparedStatementCreatorFactory.java:245)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:583)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:639)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:664)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:272)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:277)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest.isSqlValid(CheckValidityOfSqlQueriesInCodebaseTest.java:124)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:180)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:170)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
02-28 16:47:35 jdbc[30]: exception
org.h2.jdbc.JdbcSQLException: Column "STUDENTEXAM_QUESTIONS.QUESTION_ID" not found; SQL statement:
SELECT qb.ID AS questionId,QUESTION_TEXT AS questionText,OPTION_ONE AS optionOne,            OPTION_TWO AS optionTwo,            OPTION_THREE AS optionThree,OPTION_FOUR AS optionFour,OPTION_FIVE AS optionFive,            qb.PHASE AS phase ,(SELECT answers  FROM answersheet_answers  WHERE answersheet = se.answersheet  AND question_id = studentexam_questions.question_id) AS studentAnswer, (SELECT MARKED_FOR_REVIEW as isReviewLaterMarked FROM answersheet_answers  WHERE answersheet = se.answersheet  AND qb.question_id = studentexam_questions.question_id) as isReviewLaterMarked,  qa.image_id as attachmentId  FROM QUESTION_BANK qb INNER JOIN studentexam_questions sq ON sq.question_id = qb.id LEFT OUTER JOIN question_attachment qa on qa.QUESTION_ID = qb.ID  INNER JOIN student_exam se ON se.ID = studentexam WHERE studentexam = ? AND se.STATUS = 'STARTED' ORDER BY qb.id [42122-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:144)
	at org.h2.expression.Comparison.optimize(Comparison.java:173)
	at org.h2.expression.ConditionAndOr.optimize(ConditionAndOr.java:132)
	at org.h2.command.dml.Select.prepare(Select.java:811)
	at org.h2.expression.Subquery.optimize(Subquery.java:73)
	at org.h2.expression.Alias.optimize(Alias.java:52)
	at org.h2.command.dml.Select.prepare(Select.java:808)
	at org.h2.command.Parser.prepareCommand(Parser.java:219)
	at org.h2.engine.Session.prepareLocal(Session.java:428)
	at org.h2.engine.Session.prepareCommand(Session.java:377)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1138)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:70)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(PreparedStatementCreatorFactory.java:245)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:583)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:639)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:664)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:272)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:277)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest.isSqlValid(CheckValidityOfSqlQueriesInCodebaseTest.java:124)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:180)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:170)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
02-28 17:05:47 jdbc[55]: exception
org.h2.jdbc.JdbcSQLException: Column "STUDENTEXAM_QUESTIONS.QUESTION_ID" not found; SQL statement:
SELECT qb.ID AS questionId,QUESTION_TEXT AS questionText,OPTION_ONE AS optionOne,            OPTION_TWO AS optionTwo,            OPTION_THREE AS optionThree,OPTION_FOUR AS optionFour,OPTION_FIVE AS optionFive,            qb.PHASE AS phase ,(SELECT answers  FROM answersheet_answers  WHERE answersheet = se.answersheet  AND question_id = studentexam_questions.question_id) AS studentAnswer, (SELECT MARKED_FOR_REVIEW as isReviewLaterMarked FROM answersheet_answers  WHERE answersheet = se.answersheet  AND qb.question_id = studentexam_questions.question_id) as isReviewLaterMarked,  qa.image_id as attachmentId  FROM QUESTION_BANK qb INNER JOIN studentexam_questions sq ON sq.question_id = qb.id LEFT OUTER JOIN question_attachment qa on qa.QUESTION_ID = qb.ID  INNER JOIN student_exam se ON se.ID = studentexam WHERE studentexam = ? AND se.STATUS = 'STARTED' ORDER BY qb.id [42122-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:144)
	at org.h2.expression.Comparison.optimize(Comparison.java:173)
	at org.h2.expression.ConditionAndOr.optimize(ConditionAndOr.java:132)
	at org.h2.command.dml.Select.prepare(Select.java:811)
	at org.h2.expression.Subquery.optimize(Subquery.java:73)
	at org.h2.expression.Alias.optimize(Alias.java:52)
	at org.h2.command.dml.Select.prepare(Select.java:808)
	at org.h2.command.Parser.prepareCommand(Parser.java:219)
	at org.h2.engine.Session.prepareLocal(Session.java:428)
	at org.h2.engine.Session.prepareCommand(Session.java:377)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1138)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:70)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(PreparedStatementCreatorFactory.java:245)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:583)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:639)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:664)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:272)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:277)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest.isSqlValid(CheckValidityOfSqlQueriesInCodebaseTest.java:124)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:180)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:170)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
02-28 17:06:42 jdbc[38]: exception
org.h2.jdbc.JdbcSQLException: Column "QB.QUESTION_ID" not found; SQL statement:
SELECT qb.ID AS questionId,QUESTION_TEXT AS questionText,OPTION_ONE AS optionOne,            OPTION_TWO AS optionTwo,            OPTION_THREE AS optionThree,OPTION_FOUR AS optionFour,OPTION_FIVE AS optionFive,            qb.PHASE AS phase ,(SELECT answers  FROM answersheet_answers  WHERE answersheet = se.answersheet  AND question_id = sq.question_id) AS studentAnswer, (SELECT MARKED_FOR_REVIEW as isReviewLaterMarked FROM answersheet_answers  WHERE answersheet = se.answersheet  AND qb.question_id = sq.question_id) as isReviewLaterMarked,  qa.image_id as attachmentId  FROM QUESTION_BANK qb INNER JOIN studentexam_questions sq ON sq.question_id = qb.id LEFT OUTER JOIN question_attachment qa on qa.QUESTION_ID = qb.ID  INNER JOIN student_exam se ON se.ID = studentexam WHERE studentexam = ? AND se.STATUS = 'STARTED' ORDER BY qb.id [42122-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:144)
	at org.h2.expression.Comparison.optimize(Comparison.java:171)
	at org.h2.expression.ConditionAndOr.optimize(ConditionAndOr.java:132)
	at org.h2.command.dml.Select.prepare(Select.java:811)
	at org.h2.expression.Subquery.optimize(Subquery.java:73)
	at org.h2.expression.Alias.optimize(Alias.java:52)
	at org.h2.command.dml.Select.prepare(Select.java:808)
	at org.h2.command.Parser.prepareCommand(Parser.java:219)
	at org.h2.engine.Session.prepareLocal(Session.java:428)
	at org.h2.engine.Session.prepareCommand(Session.java:377)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1138)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:70)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(PreparedStatementCreatorFactory.java:245)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:583)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:639)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:664)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:272)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:277)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest.isSqlValid(CheckValidityOfSqlQueriesInCodebaseTest.java:124)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:180)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:170)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
02-28 17:07:58 jdbc[30]: exception
org.h2.jdbc.JdbcSQLException: Column "QB.QUESTION_ID" not found; SQL statement:
SELECT qb.ID AS questionId,QUESTION_TEXT AS questionText,OPTION_ONE AS optionOne,            OPTION_TWO AS optionTwo,            OPTION_THREE AS optionThree,OPTION_FOUR AS optionFour,OPTION_FIVE AS optionFive,            qb.PHASE AS phase ,(SELECT answers  FROM answersheet_answers  WHERE answersheet = se.answersheet  AND question_id = sq.question_id) AS studentAnswer, (SELECT MARKED_FOR_REVIEW as isReviewLaterMarked FROM answersheet_answers  WHERE answersheet = se.answersheet  AND qb.question_id = sq.question_id) as isReviewLaterMarked,  qa.image_id as attachmentId  FROM QUESTION_BANK qb INNER JOIN studentexam_questions sq ON sq.question_id = qb.id LEFT OUTER JOIN question_attachment qa on qa.QUESTION_ID = qb.ID  INNER JOIN student_exam se ON se.ID = sq.studentexam WHERE studentexam = ? AND se.STATUS = 'STARTED' ORDER BY qb.id [42122-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:144)
	at org.h2.expression.Comparison.optimize(Comparison.java:171)
	at org.h2.expression.ConditionAndOr.optimize(ConditionAndOr.java:132)
	at org.h2.command.dml.Select.prepare(Select.java:811)
	at org.h2.expression.Subquery.optimize(Subquery.java:73)
	at org.h2.expression.Alias.optimize(Alias.java:52)
	at org.h2.command.dml.Select.prepare(Select.java:808)
	at org.h2.command.Parser.prepareCommand(Parser.java:219)
	at org.h2.engine.Session.prepareLocal(Session.java:428)
	at org.h2.engine.Session.prepareCommand(Session.java:377)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1138)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:70)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(PreparedStatementCreatorFactory.java:245)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:583)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:639)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:664)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:272)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForRowSet(NamedParameterJdbcTemplate.java:277)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest.isSqlValid(CheckValidityOfSqlQueriesInCodebaseTest.java:124)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:180)
	at org.nthdimenzion.CheckValidityOfSqlQueriesInCodebaseTest$QueriesRunner.call(CheckValidityOfSqlQueriesInCodebaseTest.java:170)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
03-06 14:39:30 jdbc[43]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT QB.ID AS QUESTIONID,QUESTION_TEXT AS QUESTIONTEXT,OPTION_ONE AS OPTIONONE,            OPTION_TWO AS OPTIONTWO,            OPTION_THREE AS OPTIONTHREE,OPTION_FOUR AS OPTIONFOUR,OPTION_FIVE AS OPTIONFIVE,            QB.PHASE AS PHASE ,(AA. ANSWERS AS[*] STUDENTANSWER,  AA.MARKED_FOR_REVIEW AS ISREVIEWLATERMARKED,  QA.IMAGE_ID AS ATTACHMENTID  FROM QUESTION_BANK QB  INNER JOIN STUDENTEXAM_QUESTIONS SQ ON SQ.QUESTION_ID = QB.ID  LEFT OUTER JOIN QUESTION_ATTACHMENT QA ON QA.QUESTION_ID = QB.ID  INNER JOIN STUDENT_EXAM SE ON SE.ID = SQ.STUDENTEXAM   LEFT OUTER JOIN ANSWERSHEET_ANSWERS AA ON AA.ANSWERSHEET = SE.ANSWERSHEET AND AA.QUESTION_ID = SQ.QUESTION_ID  WHERE STUDENTEXAM = ?  AND SE.STATUS = 'COMPLETED'   ORDER BY QB.ID; "; expected "., [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
SELECT qb.ID AS questionId,QUESTION_TEXT AS questionText,OPTION_ONE AS optionOne,            OPTION_TWO AS optionTwo,            OPTION_THREE AS optionThree,OPTION_FOUR AS optionFour,OPTION_FIVE AS optionFive,            qb.PHASE AS phase ,(aa. answers AS studentAnswer,  aa.MARKED_FOR_REVIEW AS isReviewLaterMarked,  qa.image_id AS attachmentId  FROM QUESTION_BANK qb  INNER JOIN studentexam_questions sq ON sq.question_id = qb.id  LEFT OUTER JOIN question_attachment qa ON qa.QUESTION_ID = qb.ID  INNER JOIN student_exam se ON se.ID = sq.studentexam   LEFT OUTER JOIN answersheet_answers aa ON aa.answersheet = se.answersheet AND aa.question_id = sq.question_id  WHERE studentexam = ?  AND se.STATUS = 'COMPLETED'   ORDER BY qb.id; [42001-173]
03-11 11:34:05 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ""DOMAIN_EVENT_ENTRY"" ( ""AGGREGATE_IDENTIFIER"" VARCHAR(255) NOT NULL, ""SEQUENCE_NUMBER"" BIGINT(20) NOT NULL, ""TYPE"" VARCHAR(255) NOT NULL, ""EVENT_IDENTIFIER"" VARCHAR(255) NOT NULL, ""META_DATA"" LONGBLOB, ""PAYLOAD"" LONGBLOB NOT NULL, ""PAYLOAD_REVISION"" VARCHAR(255) DEFAULT NULL, ""PAYLOAD_TYPE"" VARCHAR(255) NOT NULL, ""TIME_STAMP"" VARCHAR(255) NOT NULL, PRIMARY KEY (""AGGREGATE_IDENTIFIER"",""SEQUENCE_NUMBER"",""TYPE""), UNIQUE KEY ""EVENT_IDENTIFIER"" (""EVENT_IDENTIFIER"") ) ENGINE=INNODB DEFAULT CHARSET=LATIN1[*] "; expected "UTF8"; SQL statement:
CREATE TABLE `domain_event_entry` ( `AGGREGATE_IDENTIFIER` varchar(255) NOT NULL, `SEQUENCE_NUMBER` bigint(20) NOT NULL, `TYPE` varchar(255) NOT NULL, `EVENT_IDENTIFIER` varchar(255) NOT NULL, `META_DATA` longblob, `PAYLOAD` longblob NOT NULL, `PAYLOAD_REVISION` varchar(255) DEFAULT NULL, `PAYLOAD_TYPE` varchar(255) NOT NULL, `TIME_STAMP` varchar(255) NOT NULL, PRIMARY KEY (`AGGREGATE_IDENTIFIER`,`SEQUENCE_NUMBER`,`TYPE`), UNIQUE KEY `EVENT_IDENTIFIER` (`EVENT_IDENTIFIER`) ) ENGINE=InnoDB DEFAULT CHARSET=latin1 [42001-173]
06-27 11:38:26 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ""ADMIN"" ( ""ID"" VARCHAR(255) NOT NULL, PRIMARY KEY (""ID""), KEY ""FK3B40B2FC5BA4AA4"" (""ID""), CONSTRAINT ""FK3B40B2FC5BA4AA4"" FOREIGN KEY (""ID"") REFERENCES ""PERSON_ROLE"" (""ID"") ) ENGINE=INNODB DEFAULT CHARSET=LATIN1[*] "; expected "UTF8"; SQL statement:
CREATE TABLE `admin` ( `ID` varchar(255) NOT NULL, PRIMARY KEY (`ID`), KEY `FK3B40B2FC5BA4AA4` (`ID`), CONSTRAINT `FK3B40B2FC5BA4AA4` FOREIGN KEY (`ID`) REFERENCES `person_role` (`ID`) ) ENGINE=InnoDB DEFAULT CHARSET=latin1 [42001-173]
06-27 11:39:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "ALTER TABLE ADMIN ADD INDEX FK3B40B2FC5BA4AA4 (ID),[*] ADD CONSTRAINT FK3B40B2FC5BA4AA4 FOREIGN KEY (ID) REFERENCES PERSON_ROLE (ID) "; SQL statement:
alter table ADMIN add index FK3B40B2FC5BA4AA4 (ID), add constraint FK3B40B2FC5BA4AA4 foreign key (ID) references PERSON_ROLE (ID) [42000-173]
06-27 11:40:27 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.message.DbException.get(DbException.java:137)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1413)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:428)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:255)
	at com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle(ConnectionHandle.java:281)
	at com.jolbox.bonecp.ConnectionHandle.close(ConnectionHandle.java:512)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:341)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:328)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:294)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:53)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
06-27 11:41:15 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.message.DbException.get(DbException.java:137)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1413)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:428)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:255)
	at com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle(ConnectionHandle.java:281)
	at com.jolbox.bonecp.ConnectionHandle.close(ConnectionHandle.java:512)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:341)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:328)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:294)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:53)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
06-27 11:41:34 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.message.DbException.get(DbException.java:137)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1413)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:428)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:255)
	at com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle(ConnectionHandle.java:281)
	at com.jolbox.bonecp.ConnectionHandle.close(ConnectionHandle.java:512)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:341)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:328)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:294)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:53)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
06-27 11:42:36 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.message.DbException.get(DbException.java:137)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1413)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:428)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:255)
	at com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle(ConnectionHandle.java:281)
	at com.jolbox.bonecp.ConnectionHandle.close(ConnectionHandle.java:512)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:341)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:328)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:294)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:53)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
06-27 11:43:56 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.message.DbException.get(DbException.java:137)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1413)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:428)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:255)
	at com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle(ConnectionHandle.java:281)
	at com.jolbox.bonecp.ConnectionHandle.close(ConnectionHandle.java:512)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:341)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:328)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:294)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:53)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
06-27 11:47:06 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.message.DbException.get(DbException.java:137)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1413)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:428)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:255)
	at com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle(ConnectionHandle.java:281)
	at com.jolbox.bonecp.ConnectionHandle.close(ConnectionHandle.java:512)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:341)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:328)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:294)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:53)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
06-27 11:49:49 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.message.DbException.get(DbException.java:137)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1413)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:428)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:255)
	at com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle(ConnectionHandle.java:281)
	at com.jolbox.bonecp.ConnectionHandle.close(ConnectionHandle.java:512)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:341)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:328)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:294)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:53)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
06-27 11:50:19 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.message.DbException.get(DbException.java:137)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1413)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:428)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:255)
	at com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle(ConnectionHandle.java:281)
	at com.jolbox.bonecp.ConnectionHandle.close(ConnectionHandle.java:512)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:341)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:328)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:294)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:53)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
06-27 11:51:36 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.message.DbException.get(DbException.java:137)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1413)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:428)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:255)
	at com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle(ConnectionHandle.java:281)
	at com.jolbox.bonecp.ConnectionHandle.close(ConnectionHandle.java:512)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:341)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:328)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:294)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:53)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
06-27 12:21:24 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-173]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)
	at org.h2.message.DbException.get(DbException.java:171)
	at org.h2.message.DbException.get(DbException.java:148)
	at org.h2.message.DbException.get(DbException.java:137)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1413)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1388)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:428)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:255)
	at com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle(ConnectionHandle.java:281)
	at com.jolbox.bonecp.ConnectionHandle.close(ConnectionHandle.java:512)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:341)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:328)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:294)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:53)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.execute(DataSourceInitializer.java:108)
	at org.springframework.jdbc.datasource.init.DataSourceInitializer.destroy(DataSourceInitializer.java:102)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:540)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:827)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:485)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
